name: Build Qrack installers

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch (adjust if needed)
      - development

  workflow_dispatch: # Allow manual triggering of the workflow


jobs:
  build_noble:
    runs-on: ubuntu-24.04  # Use a Noble Numbat runner
    strategy:
      matrix:
        platform:
          - manylinux_2_39_x86_64
    steps:
      - name: Checkout Qrack
        uses: actions/checkout@v4

      - name: Prepare Build Environment (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ocl-icd-opencl-dev opencl-headers libboost-dev

      - name: Build Qrack Linux x86-64
        run: |
          mkdir build
          cd build
          cmake -DENABLE_RDRAND=OFF -DENABLE_DEVRAND=ON -DQBCAPPOW=9 -DCPP_STD=14 ..
          make all
          sudo cpack

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libqrack-${{ matrix.platform }}
          path: |
            build/libqrack-*.sh
            build/benchmarks

  build_jammy:
    runs-on: ubuntu-22.04  # Use a Jammy Jellyfish runner
    strategy:
      matrix:
        platform:
          - manylinux_2_35_x86_64
    steps:
      - name: Checkout Qrack
        uses: actions/checkout@v4

      - name: Prepare Build Environment (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ocl-icd-opencl-dev opencl-headers libboost-dev

      - name: Build Qrack Linux x86-64
        run: |
          mkdir build
          cd build
          cmake -DENABLE_RDRAND=OFF -DENABLE_DEVRAND=ON -DQBCAPPOW=9 -DCPP_STD=14 ..
          make all
          sudo cpack

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libqrack-${{ matrix.platform }}
          path: |
            build/libqrack-*.sh
            build/benchmarks

  build_mac_15:
    runs-on: macos-15  # Use a Mac OS runner
    strategy:
      matrix:
        platform:
          - macosx_15_0_arm64
    steps:
      - name: Checkout Qrack
        uses: actions/checkout@v4

      - name: Install Homebrew (MacOS)
        uses: Homebrew/actions/setup-homebrew@master

      - name: Prepare Build Environment (MacOS)
        run: |
          brew install cmake boost

      - name: Build Qrack MacOS
        run: |
          mkdir build
          cd build
          cmake -DENABLE_OPENCL=OFF -DENABLE_COMPLEX_X2=OFF -DENABLE_SSE3=OFF -DENABLE_RDRAND=OFF -DQBCAPPOW=9 -DCPP_STD=14 -DBoost_INCLUDE_DIR=/opt/homebrew/include -DBoost_LIBRARY_DIRS=/opt/homebrew/lib ..
          make qrack_pinvoke benchmarks
          sudo cpack

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libqrack-${{ matrix.platform }}
          path: |
            build/libqrack-*.sh
            build/benchmarks

  build_mac_14:
    runs-on: macos-14  # Use a Mac OS runner
    strategy:
      matrix:
        platform:
          - macosx_14_0_arm64
    steps:
      - name: Checkout Qrack
        uses: actions/checkout@v4

      - name: Install Homebrew (MacOS)
        uses: Homebrew/actions/setup-homebrew@master

      - name: Prepare Build Environment (MacOS)
        run: |
          brew install cmake boost

      - name: Build Qrack MacOS
        run: |
          mkdir build
          cd build
          cmake -DENABLE_OPENCL=OFF -DENABLE_COMPLEX_X2=OFF -DENABLE_SSE3=OFF -DENABLE_RDRAND=OFF -DQBCAPPOW=9 -DCPP_STD=14 -DBoost_INCLUDE_DIR=/opt/homebrew/include -DBoost_LIBRARY_DIRS=/opt/homebrew/lib ..
          make qrack_pinvoke benchmarks
          sudo cpack

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libqrack-${{ matrix.platform }}
          path: |
            build/libqrack-*.sh
            build/benchmarks

  build_windows:
    runs-on: windows-latest  # Use a Windows runner
    strategy:
      matrix:
        platform:
          - win-amd64
        dependencies: [vcpkg]
    steps:
      - name: Checkout Qrack
        uses: actions/checkout@v4

      - name: Install vcpkg dependencies
        run: |
          vcpkg install opencl

      - name: Install boost
        uses: MarkusJx/install-boost@v1.0.1
        id: install-boost
        with:
          boost_version: 1.73.0
          toolset: msvc14.2
          boost_install_dir: D:/a/qrack/qrack

      - name: Build Qrack Windows x86-64
        run: |
          mkdir build
          cd build
          powershell -c "Invoke-WebRequest -Uri 'https://github.com/ckormanyos/xxd/releases/download/v1.1/xxd-win64-msvc.zip' -OutFile 'xxd-win64-msvc.zip'"
          powershell -c "Expand-Archive -Path xxd-win64-msvc.zip -DestinationPath ."
          cmake .. -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" -DXXD_BIN="xxd.exe" -DQBCAPPOW=9 -DCPP_STD=14 -DBoost_INCLUDE_DIR="D:/a/qrack/qrack" -DBoost_LIBRARY_DIRS="D:/a/qrack/qrack"
          cmake --build . --config Release --target PACKAGE benchmarks

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libqrack-${{ matrix.platform }}
          path: |
            build/libqrack-*.exe
            build/Release/benchmarks.exe
